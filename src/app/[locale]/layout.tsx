import AuthProvider from "@/providers/auth.provider";
import QueryProvider from "@/providers/query-client.provider";
import { ThemeProvider } from "@/providers/theme-provider";
import ToasterProvider from "@/providers/toaster-provider";
import type { Metadata } from "next";
import { NextIntlClientProvider } from "next-intl";
import { getMessages } from "next-intl/server";
import { Toaster } from "@/components/ui/toaster";

import { Inter } from "next/font/google";

const Inter_Font = Inter({
  subsets: ["latin"],
  display: "swap",
});

export const metadata: Metadata = {
  title: "RALF Admin (Dashboard)",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
  params: { locale },
}: Readonly<{
  children: React.ReactNode;
  params: { locale: string };
}>) {
  // Providing all messages to the client
  // side is the easiest way to get started
  const messages = await getMessages();

  return (
    <html
      lang={locale}
      // ðŸ’¡ Prevent next-themes hydration warning
      suppressContentEditableWarning
      suppressHydrationWarning
    >
      <body
        className={`${Inter_Font.className} antialiased`}
        // ðŸ’¡ Prevent hydration warnings caused by third-party extensions, such as Grammarly.
        suppressHydrationWarning
      >
        {/* tanstack query client provider */}
        <QueryProvider>
          <NextIntlClientProvider messages={messages}>
            {/* I18n Next-Intl Provider */} {/* Theme Provider */}
            <ThemeProvider>
              {/* Auth Provider */}
              {/* Toaster provider */}
              <ToasterProvider>{children}</ToasterProvider>
            </ThemeProvider>
            {/* Redux Store Provider */}
          </NextIntlClientProvider>
        </QueryProvider>
        <Toaster />
      </body>
    </html>
  );
}
